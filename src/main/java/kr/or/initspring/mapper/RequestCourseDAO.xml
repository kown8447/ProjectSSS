<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.or.initspring.dao.RequestCourseDAO">
	<select id="getOpenedLectureList" resultType="kr.or.initspring.dto.requestCourse.OpenedLectureDTO">
		select s.subject_code, o.semester_code, o.registed_seat, s.professor_code, s.subject_name, 
		s.subject_credit,s.grade_limit, s.subject_state, s.subject_seats, s.subject_type
		from opened o join subject s
		on o.subject_code = s.SUBJECT_CODE
	</select>
	
	<select id="getPeriodBySubjectCode" resultType="kr.or.initspring.dto.commons.PeriodDTO">
		select p.PERIOD_DAY, p.PERIOD_START, p.PERIOD_END
		from (select * from lecture where subject_code=#{subject_code}) l join period p
		on l.period_code = p.PERIOD_CODE
	</select>
	
	<select id="getProfessorNameByPfCode" resultType="String">
		select m.member_name
		from (select * from professor where professor_code = #{professor_name}) p join member m
		on p.member_id = m.member_id
	</select>
	
	<select id="getLecturePlanBySubjectCode" resultType="String">
		select subject_filesrc from plan where SUBJECT_CODE = #{subject_code}
	</select>
	
	<select id="getRequiredChoice" resultType="int">
		select required_choice from
		<if test="param2==0">
			major where subject_code = #{param1}
		</if>
		<if test="param2==1">
			liberal where subject_code = #{param1}
		</if>
	</select>
	
	<select id="getCollegeList" resultType="kr.or.initspring.dto.commons.CollegeDTO">
		select * from college
	</select>
	
	<select id="getDepartmentList" parameterType="String" resultType="kr.or.initspring.dto.commons.DepartmentDTO">
		select * from department
		<where>
			<if test="value != null and value != ''">
				college_code = #{value}
			</if>
		</where>
	</select>
	
	<select id="getOpenedLectureListByKeyword" parameterType="hashmap" resultType="kr.or.initspring.dto.requestCourse.OpenedLectureDTO">
		<choose>
			<when test="department_code.equals('1000')">
				select s.subject_code, o.semester_code, o.registed_seat, s.professor_code, s.subject_name, 
				s.subject_credit,s.grade_limit, s.subject_state, s.subject_seats, s.subject_type
				from opened o join subject s
				on o.subject_code = s.SUBJECT_CODE
			</when>
			<when test="department_code.equals('100')">
				select l.SUBJECT_CODE, l.REQUIRED_CHOICE, s.PROFESSOR_CODE, s.SUBJECT_NAME, 
				s.SUBJECT_CREDIT, s.GRADE_LIMIT,s.SUBJECT_STATE,s.SUBJECT_SEATS,s.SUBJECT_TYPE
				from liberal l join subject s
				on l.subject_code = s.subject_code
			</when>
			<otherwise>
				select *
				from (select * from major where department_code=#{department_code}) m join subject s
				on m.subject_code = s.subject_code
				where s.subject_state=2
			</otherwise>
		</choose>
	</select>
</mapper>